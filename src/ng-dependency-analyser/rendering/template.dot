digraph modules {
  // MODULES
  {{~it.getModules() :module}}
    // Module as import name and name as label
    "{{= module.importName}}" [shape="rect", label="{{= module.name}} <<{{= module.layer}}>>"]
    {{~module.requires :required}}
    // Required as import name
    "{{= required}}" [shape="rect"]
    {{~}}
    {{~module.provides :provide}}
    // Provided as import name and name as label
    "{{= provide.importName}}" [shape="{{? provide.type === 'directive'}}diamond{{?}}{{? provide.type !== 'directive'}}ellipse{{?}}", label="{{= provide.name}}"]
    {{~}}
  {{~}}

  {{~it.getModules() :module}}
    {{~module.requires :required}}
    "{{= module.importName}}" -> "{{= required }}" [label="requires"]
    {{~}}
  {{~}}

  {{~it.getModules() :module}}
    {{~module.provides :provide}}
    "{{= module.importName}}" -> "{{= provide.importName }}" [label="provides"]
    {{~}}
  {{~}}

  // DEPENDENCIES
  {{~it.getInjectedDependencies() :injectedDependency}}
  // File as import name where dependencies are injected
  "{{= injectedDependency.importName }}"
  {{~injectedDependency.dependencies :dependency}}
  // Injected dependency as import name with name as label
  "{{= dependency.importName}}" [shape="ellipse", label="{{= dependency.name}}"]
  {{~}}
  {{~}}

  {{~it.getInjectedDependencies() :injectedDependency}}
  {{~injectedDependency.dependencies :dependency}}
  "{{= injectedDependency.importName }}" -> "{{= dependency.importName }}" [label="uses"]
  {{~}}
  {{~}}
}
